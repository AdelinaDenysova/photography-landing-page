// Module 2.4

// Example 1 - –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calcBMI(weight, height) –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ —á–µ–ª–æ–≤–µ–∫–∞.
// –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–µ—Å –≤ –∫–∏–ª–ª–æ–≥—Ä–∞–º–º–∞—Ö –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç –≤—ã—Å–æ—Ç—ã —á–µ–ª–æ–≤–µ–∫–∞ –≤ –º–µ—Ç—Ä–∞—Ö.

// –í–µ—Å –∏ –≤—ã—Å–æ—Ç–∞ –±—É–¥—É—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏.
// –ù–µ—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –≤–∏–¥–µ 24.7 –∏–ª–∏ 24, 7, —Ç–æ –µ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—è—Ç–∞—è.

// –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π;


// const calcBMI = (weight, height) => {
//     let result = 0;
//     const weightValue = Number(weight).replace(',', '.');
//     const heightValue = Number(height).replace(',', '.');

//     console.log(weightValue);
//     console.log(heightValue);

//     result = weightValue / Math.pow(heightValue, 2);

//     return result.toFixed(1);
// };

// const bmi = calcBMI('88,3', '1.75');
// console.log(bmi); // 28.8

//////////////////////////////////////////////////////////////////////////////////////////

// Example 2 - –ú–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é min(a,b), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª a –∏ b.

// const min = (a, b) => {
//     let minNumber = a;

//     minNumber < b ? minNumber : minNumber = b;

//     return minNumber;

//      return a < b ? a : b;
// };

// console.log(min(2, 5)); // 2
// console.log(min(3, -1)); // -1
// console.log(min(1, 1)); // 1

//////////////////////////////////////////////////////////////////////////////////////////

// Example 3 - –ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getRectArea(dimensions) –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä dimensions –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
// –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// function getRectArea(dimensions) {
//     const dimensionsArr = dimensions.split(' ');
    
//     const rectArea = dimensionsArr[0] * dimensionsArr[1];
    
//     return rectArea;
// };

// console.log(getRectArea('8 11')); // 88

//////////////////////////////////////////////////////////////////////////////////////////

// Example 4 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é logItems(items), –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–∏–∫–ª for,
// –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ
// –≤ —Ñ–æ—Ä–º–∞—Ç–µ < –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ > - <–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ >.
// –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ ['Mango', 'Poly', 'Ajax']
// —Å –∏–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 2 –≤—ã–≤–µ–¥–µ—Ç 3 - Ajax.

// function logItems(items) {
//     for (i = 0; i < items.length; i += 1) {
//         console.log(`${i + 1}: ${items[i]}`);
//     }
// }


// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

//////////////////////////////////////////////////////////////////////////////////////////

// Example 5 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é printContactsInfo(names, phones) –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –í –ø–∞—Ä–∞–º–µ—Ç—Ä—ã names –∏ phones –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// function printContactsInfo(names, phones) {
//     const namesArr = names.split(',');
//     const phonesArr = phones.split(',');

//     for (i = 0; i < namesArr.length; i += 1) {
//         console.log(`${namesArr[i]}: ${phonesArr[i]}`);
//     };
// };


// printContactsInfo('Jacob,William,Solomon,Artemis','89001234567,89001112233,890055566377,890055566300');

//////////////////////////////////////////////////////////////////////////////////////////

// Example 6 - –ü–æ–∏—Å–∫ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findLargestNumber(numbers)–∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ.

// function findLargestNumber(numbers) {
    // let largestNumber = numbers[0];

    // for (const number of numbers) {
    //     if (number > largestNumber) {
    //         largestNumber = number;
    //     };
    // };

    // return largestNumber;
    
    //or:

    // return Math.max(...numbers);
// };

// console.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83

//////////////////////////////////////////////////////////////////////////////////////////

// Example 7 - –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calcAverage() –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// –í—Å–µ –∞—Ä—É–≥–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.

// function calcAverage(...args) {
//     let total = 0;

//     for (i = 0; i < args.length; i += 1) {
//         total += args[i];
//     };
    
//     const average = total / args.length;
//     return average;
// };

// console.log(calcAverage(1, 2, 3, 4)); // 2.5
// console.log(calcAverage(14, 8, 2)); // 8
// console.log(calcAverage(27, 43, 2, 8, 36)); // 23.2

//////////////////////////////////////////////////////////////////////////////////////////


// Example 8 - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é formatTime(minutes), –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–µ–¥—ë—Ç
// –∑–Ω–∞—á–µ–Ω–∏–µ minutes(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç) –≤ —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç HH:MM.

// function formatTime(totalMinutes) {
//     const hours = Math.floor(totalMinutes / 60);
//     const minutes = totalMinutes % 60;
//     // console.log(hours);
//     // console.log(minutes);

//     const doubleDigitHours = String(hours).padStart(2, 0);
//     const doubleDigitMinutes = String(minutes).padStart(2, 0);
//     return `${doubleDigitHours}:${doubleDigitMinutes}`;
// };

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

//////////////////////////////////////////////////////////////////////////////////////////

// Example 9 - –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫—É—Ä—Å–æ–≤ (includes, indexOf, push –∏ —Ç. –¥.)
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤ courses:

// addCourse(name) - –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å –≤ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// removeCourse(name) - —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—Å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// updateCourse(oldName, newName) - –∏–∑–º–µ–Ω—è–µ—Ç –∏–º—è –Ω–∞ –Ω–æ–≤–æ–µ

// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// const addCourse = course => {
//     if (courses.includes(course)) {
//         console.log(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫—É—Ä—Å "${course}".`);
//         return;
//     };

//     console.log(`–î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—Å "${course}".`);
//     courses.push(course);
// };

// const removeCourse = course => {
//     if (courses.includes(course)) {
//         const courseIndex = courses.indexOf(course);
//         courses.splice(courseIndex, 1);
//         console.log(`–£–¥–∞–ª—è–µ–º –∫—É—Ä—Å "${course}".`);
//         return;
//     };

//     console.log('–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω');
// };

// const updateCourse = (oldCourse, newCourse) => {
//     if (courses.includes(oldCourse)) {
//         const courseIndex = courses.indexOf(oldCourse);
//         courses.splice(courseIndex, 1, newCourse);
//         console.log(`–ó–∞–º–µ–Ω—è–µ–º –∫—É—Ä—Å "${oldCourse}" –Ω–∞ "${newCourse}".`);
//         return;
//     };

//     console.log('–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω');
// }

// console.log(courses);
// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å'
// console.log(courses);

// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('Vue'); // '–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω'

// updateCourse('Express', 'NestJS');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']
// updateCourse('Vue', 'NestJS');
// console.log(courses);

//////////////////////////////////////////////////////////////////////////////////////////

// const tweets = [
//   { id: "000", likes: 5, tags: ["js", "nodejs"] },
//   { id: "001", likes: 2, tags: ["html", "css"] },
//   { id: "002", likes: 17, tags: ["html", "js", "nodejs"] },
//   { id: "003", likes: 8, tags: ["css", "react"] },
//   { id: "004", likes: 0, tags: ["js", "nodejs", "react"] },
// ];

// const getTags = tweets =>
//   tweets.reduce((allTags, tweet) => {
//     allTags.push(...tweet.tags);

//     return allTags;
//   }, []);

// const tags = getTags(tweets);

// console.log(tags); // ['js', 'nodejs', 'html', 'css', 'html', 'js', 'nodejs', 'css', 'react', 'js', 'nodejs', 'react']

// –í—ã–Ω–µ—Å–µ–º callback-—Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–¥–µ–ª—å–Ω–æ, –∞ –≤ reduc–µ –ø–µ—Ä–µ–¥–∞–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–µ.
// –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –µ—Å–ª–∏ callback-—Ñ—É–Ω–∫—Ü–∏—è –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–∞—è.

// –ï—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ-–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–µ acc –Ω–µ—Ç—É —Å–≤–æ–µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ —Å –∫–ª—é—á–µ–º tag,
// —Ç–æ —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ 0.
// –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1.
// const getTagStats = (acc, tag) => {
//   if (!acc.hasOwnProperty(tag)) {
//     acc[tag] = 0;
//   }

//   acc[tag] += 1;

//   return acc;
// };

// –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ —ç—Ç–æ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç {}
// const countTags = tags => tags.reduce((acc, tag) => {
//     if (!acc.hasOwnProperty(tag)) {
//         acc[tag] = 0;
//     };

//     acc[tag] += 1;

//     return acc;
// }, {});

// const tagCount = countTags(tags);
// console.log(tagCount);

//////////////////////////////////////////////////////////////////////////////////////////

// console.log("–ú–æ–¥—É–ª—å 3 –ó–∞–Ω—è—Ç–∏–µ 6. –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –∏ rest / spread");

// Example 1 - –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤–º–µ—Å—Ç–æ –Ω–∞–±–æ—Ä–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

// function calcBMI ({ weight, height }) {
//   const numericWeight = Number(weight.replace(',', '.'));
//   const numericHeight = Number(height.replace(',', '.'));
//   return Number((numericWeight / numericHeight ** 2).toFixed(1));
// }

// // –ë—ã–ª–æ
// // console.log(calcBMI('88,3', '1.75'));
// // console.log(calcBMI('68,3', '1.65'));
// // console.log(calcBMI('118,3', '1.95'));

// // –û–∂–∏–¥–∞–µ—Ç—Å—è
// console.log(
//   calcBMI({
//     weight: '88,3',
//     height: '1.75',
//   }),
// );
// console.log(
//   calcBMI({
//     weight: '68,3',
//     height: '1.65',
//   }),
// );
// console.log(
//   calcBMI({
//     weight: '118,3',
//     height: '1.95',
//   }),
// );

//////////////////////////////////////////////////////////////////////////////////////////

// Example 2 - –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤–º–µ—Å—Ç–æ –Ω–∞–±–æ—Ä–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

// function printContactsInfo({ names, phones }) {
//   const nameList = names.split(',');
//   const phoneList = phones.split(',');
//   for (let i = 0; i < nameList.length; i += 1) {
//     console.log(`${nameList[i]}: ${phoneList[i]}`);
//   }
// }

// // –ë—ã–ª–æ
// // printContactsInfo(
// //   'Jacob,William,Solomon,Artemis',
// //   '89001234567,89001112233,890055566377,890055566300',
// // );

// // –û–∂–∏–¥–∞–µ—Ç—Å—è
// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artemis',
//   phones: '89001234567,89001112233,890055566377,890055566300',
// });

//////////////////////////////////////////////////////////////////////////////////////////

// // Example 3 - –ì–ª—É–±–æ–∫–∞—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// // –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤–º–µ—Å—Ç–æ –Ω–∞–±–æ—Ä–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

// function getBotReport({ companyName, bots: { repair, defence } }) {
//   return `${companyName} has ${repair + defence} bots in stock`;
// }

// // –ë—ã–ª–æ
// // console.log(getBotReport('Cyberdyne Systems', 150, 50));

// // –û–∂–∏–¥–∞–µ—Ç—Å—è
// console.log(
//   getBotReport({
//     companyName: 'Cyberdyne Systems',
//     bots: {
//       repair: 150,
//       defence: 50,
//     },
//   }),
// ); // "Cyberdyne Systems has 200 bots in stock"

//////////////////////////////////////////////////////////////////////////////////////////

// // Example 4 - –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// // –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
// // —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ companyName –∏ stock –∏ –≤—ã–≤–æ–¥–∏–ª–∞ —Ä–µ–ø–æ—Ä—Ç
// // –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ –ª—é–±–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.

// // –†–µ—à–µ–Ω–∏–µ
// function getStockReport({ companyName, stock }) {
//   let total = 0;
//   for (const value of Object.values(stock)) {
//     total += value;
//   }
//   return `${companyName} has ${total} items in stock`;
// }

// console.log(
//   getStockReport({
//     companyName: 'Cyberdyne Systems',
//     stock: {
//       repairBots: 150,
//       defenceBots: 50,
//     },
//   }),
// ); // "Cyberdyne Systems has 200 items in stock"

// console.log(
//   getStockReport({
//     companyName: 'Belacci',
//     stock: {
//       shoes: 20,
//       skirts: 10,
//       hats: 5,
//     },
//   }),
// ); // "Belacci has 35 item in stock"

//////////////////////////////////////////////////////////////////////////////////////////

// // Example 5 - –û–ø–µ—Ä–∞—Ü–∏—è spread
// // –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é createContact(partialContact) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞
// // –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ id –∏ createdAt,
// // –∞ —Ç–∞–∫–∂–µ list —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º "default" –µ—Å–ª–∏ –≤ partialContact –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞.

// // –†–µ—à–µ–Ω–∏–µ
// function createContact(partialContact) {
//   return {
//     list: 'default',
//     ...partialContact,
//     id: generateId(),
//     createdAt: Date.now(),
//   };
// }

// console.log(
//   createContact({
//     name: 'Mango',
//     email: 'mango@mail.com',
//     list: 'friends',
//   }),
// );
// console.log(
//   createContact({
//     name: 'Poly',
//     email: 'poly@hotmail.com',
//   }),
// );

// function generateId() {
//   return '_' + Math.random().toString(36).substr(2, 9);
// }

//////////////////////////////////////////////////////////////////////////////////////////

// // Example 6 - –û–ø–µ—Ä–∞—Ü–∏—è rest
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é transformUsername(user) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞
// // –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –Ω–æ–≤—ã–π –æ–±—å–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º fullName, –≤–º–µ—Å—Ç–æ firstName –∏ lastName.

// // –†–µ—à–µ–Ω–∏–µ
// function transformUsername({ firstName, lastName, ...otherProps }) {
//   return {
//     fullName: `${firstName} ${lastName}`,
//     ...otherProps,
//   };
// }

// console.log(
//   transformUsername({
//     id: 1,
//     firstName: 'Jacob',
//     lastName: 'Mercer',
//     email: 'j.mercer@mail.com',
//     friendCount: 40,
//   }),
// );

// console.log(
//   transformUsername({
//     id: 2,
//     firstName: 'Adrian',
//     lastName: 'Cross',
//     email: 'a.cross@hotmail.com',
//     friendCount: 20,
//   }),
// );

//////////////////////////////////////////////////////////////////////////////////////////

// console.log('–ú–æ–¥—É–ª—å 3. –ó–∞–Ω—è—Ç–∏–µ 1. –û–±—ä–µ–∫—Ç—ã');

// // Example 1 - –û—Å–Ω–æ–≤—ã –æ–±—å–µ–∫—Ç–æ–≤
// // –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π, –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ user, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ:

// // –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ mood —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 'happy'
// // –∑–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ hobby –Ω–∞ 'skydiving'
// // –∑–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ premium –Ω–∞ false
// // –≤—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä–µ–∫—Ç–∞ user –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É—è Object.keys() –∏ for...of

// function changeObj(obj) {
//     obj.mood = 'happy';
//     obj.hobby = 'skydiving';
//     obj.premium = false;
//     const keys = Object.keys(user);
//     for (const key of keys) {
//         console.log(`${key}: ${obj[key]}`);
//     };
//     return obj;
// };

// // –ö–æ–¥
// const user = {
//   name: 'Mango',
//   age: 20,
//   hobby: 'html',
//   premium: true,
// };

// console.log(changeObj(user));

//////////////////////////////////////////////////////////////////////////////////////////

// // Example 2 - –º–µ—Ç–æ–¥ Object.values()
// // –£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–∞—Ä–ø–ª–∞—Ç—ã –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.
// // –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∑–∞—Ä–ø–ª–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// // –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum. –î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è 390. –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç salaries –ø—É—Å—Ç, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0.

// // –ö–æ–¥
// const salaries = {
//   John: 100,
//   Ann: 160,
//   Pete: 130,
// };

// let sum = 0;
// const allSalaries = Object.values(salaries);
// for (const salary of allSalaries) {
//     sum += salary;
// };

// console.log(sum);

//////////////////////////////////////////////////////////////////////////////////////////

// // Example 3 - –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
// // –ù–∞–ø–∏—à–∏—Ç–µ —Ñ-—Ü–∏—é calcTotalPrice(stones, stoneName), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
// // –º–∞—Å—Å–∏–≤ –æ–±—å–µ–∫—Ç–æ–≤ –∏ —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞–º–Ω—è. –§ - —Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// // –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–º–Ω–µ–π —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º, —Ü–µ–Ω–æ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–∑ –æ–±—å–µ–∫—Ç–∞

// // –ö–æ–¥
// const stones = [
//   { name: '–ò–∑—É–º—Ä—É–¥', price: 1300, quantity: 4 },
//   { name: '–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç', price: 2700, quantity: 3 },
//   { name: '–°–∞–ø—Ñ–∏—Ä', price: 400, quantity: 7 },
//   { name: '–©–µ–±–µ–Ω—å', price: 200, quantity: 2 },
// ];

// function calcTotalPrice(stonesObj, stoneName) {
//     for (const stone of stonesObj) {
//         if (stone.name === stoneName) {
//             return stone.price * stone.quantity;
//         };
//     };

//     return "Such stone doesn't exist";
// };

// console.log(calcTotalPrice(stones, '–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç'));

//////////////////////////////////////////////////////////////////////////////////////////

// // Example 4 - –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏
// // –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã–º –∫–∞–±–∏–Ω–µ—Ç–æ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–∞–Ω–∫–∞.
// // –ï—Å—Ç—å –æ–±—ä–µ–∫—Ç account –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.

// /*
//  * –¢–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞—Ü–∫–∏–π –≤—Å–µ–≥–æ –¥–≤–∞.
//  * –ú–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å –ª–∏–±–æ —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á–µ—Ç–∞.
//  */
// const Transaction = {
//   DEPOSIT: 'deposit',
//   WITHDRAW: 'withdraw',
// };

// /*
//  * –ö–∞–∂–¥–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏: id, type –∏ amount
//  */

// const account = {
//   // –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞
//     balance: 0,
//   // –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
//     transactions: [],

//   /*
//    * –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
//    * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É –∏ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
//    */
//     createTransaction(amount, type) {
//         let transaction = {};
//         this.transactions.push(transaction);
//         transaction.id = this.transactions.length;
//         transaction.amount = amount;
//         transaction.type = type;
//     },

//   /*
//    * –ú–µ—Ç–æ–¥, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—É–º–º—ã –∫ –±–∞–ª–∞–Ω—Å—É.
//    * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É —Ç–∞–Ω–∑–∞–∫—Ü–∏–∏.
//    * –í—ã–∑—ã–≤–∞–µ—Ç createTransaction –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
//    * –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
//    */
//     deposit(amount) {
//         this.createTransaction(amount, Transaction.DEPOSIT);
//         this.balance += amount;
//     },

//   /*
//    * –ú–µ—Ç–æ–¥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–Ω—è—Ç–∏–µ —Å—É–º–º—ã —Å –±–∞–ª–∞–Ω—Å–∞.
//    * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É —Ç–∞–Ω–∑–∞–∫—Ü–∏–∏.
//    * –í—ã–∑—ã–≤–∞–µ—Ç createTransaction –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
//    * –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
//    *
//    * –ï—Å–ª–∏ amount –±–æ–ª—å—à–µ —á–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å, –≤—ã–≤–æ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
//    * –æ —Ç–æ–º, —á—Ç–æ —Å–Ω—è—Ç–∏–µ —Ç–∞–∫–æ–π —Å—É–º–º—ã –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.
//    */
//     withdraw(amount) {
//         this.createTransaction(amount, Transaction.WITHDRAW);
//         if (amount > this.balance) {
//             return "There are insufficient funds to withdraw.";
//         };
//         this.balance -= amount;
//     },

//   /*
//    * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
//    */
//     getBalance() {
//         return this.balance;
//     },

//   /*
//    * –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç—Ä–∞–Ω–∑–∞k—Ü–∏–∏ –ø–æ id
//    */
//     getTransactionDetails(id) {
//         for (const tr of this.transactions) {
//             if (tr.id === id) {
//                 return tr;
//             };
//         };
//     },

//   /*
//    * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ä–µ–¥—Å—Ç–≤
//    * –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
//    */
//     getTransactionTotal(type) {
//         let currentTypeTransactionAmount = 0;
//         for (const tr of this.transactions) {
//             if (tr.type === type) {
//                 currentTypeTransactionAmount += tr.amount;
//             };
//         };
//         return currentTypeTransactionAmount;
//     },
// };

// account.deposit(1000);
// console.log(account.balance);
// account.deposit(2000);
// account.deposit(4000);
// console.log(account.balance);
// account.withdraw(4000);
// console.log(account.balance);
// account.withdraw(2000);
// console.log(account.balance);
// console.log(account.getBalance());
// console.log(account.transactions);
// console.log(account.getTransactionDetails(3));
// console.log(account.getTransactionTotal(Transaction.WITHDRAW));
// console.log(account.getTransactionTotal(Transaction.DEPOSIT));

console.log("üöÄ ~ file: tasks4-2.js ~ line 669 ~ d", d)
const d = 'ffff';